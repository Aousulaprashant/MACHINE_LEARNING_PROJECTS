# -*- coding: utf-8 -*-
"""Project-2 Diabetes-Prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hsLQc8syzNmVwJoG6TKhIilPhR8kgJbx

Importing the Librabies
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import accuracy_score
from sklearn import svm

"""Data Collectiong and Data Processing"""

model_data=pd.read_csv('/content/diabetes.csv')

model_data.head()

model_data.isnull().sum()

model_data['Outcome'].value_counts()

#saparating the featurs and Target

X=model_data.drop(columns='Outcome',axis=1)
Y=model_data['Outcome']

"""Standarizing The Data"""

standadize = StandardScaler()
standadize.fit(X)
standarized_data =standadize.transform(X)
print(standarized_data)

X=standarized_data
Y=model_data['Outcome']

X_train, X_test ,Y_train ,Y_test =train_test_split(X,Y,test_size=0.2,stratify=Y,random_state=2)

print(X.shape,X_train.shape,X_test.shape)

"""MODEL CREATION"""

classify = svm.SVC(kernel='linear')

classify.fit(X_train,Y_train)

"""Model Evaluation

Accuracy Score
"""

#checking accurcy for our model

predict_testing_data = classify.predict(X_train)
accuracy_score_of_prediction=accuracy_score(predict_testing_data,Y_train)
print(accuracy_score_of_prediction)

"""Making a Predictive System

"""

input_data = (3,126,88,41,235,39.3,0.704,27)

# changing the input_data to numpy array
input_data_as_numpy_array = np.asarray(input_data)

# reshape the array as we are predicting for one instance
input_data_reshaped = input_data_as_numpy_array.reshape(1,-1)

# standardize the input data
std_data = standadize.transform(input_data_reshaped)
print(std_data)

prediction = classify.predict(std_data)
print(prediction)

if (prediction[0] == 0):
  print('The person is not diabetic')
else:
  print('The person is diabetic')